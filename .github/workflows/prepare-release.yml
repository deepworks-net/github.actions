name: Prepare Release Branch
on:
  push:
    tags:
      - 'prep-v*'  # Only triggers on tags like prep-v1.0.0

jobs:
  create-release-branch:
    if: github.ref_type == 'tag' && startsWith(github.ref, 'refs/tags/prep-')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: develop
          fetch-depth: 0
          
      - name: Create Release Branch
        run: |
          # Extract version from prep tag (remove 'prep-' prefix)
          PREP_TAG=${GITHUB_REF#refs/tags/}
          VERSION=${PREP_TAG#prep-}
          RELEASE_BRANCH="release/${VERSION}"
          TODAY=$(date +"%m/%d/%Y")
          ORG="${{ github.repository_owner }}"
          PROJ="${{ github.event.repository.name }}"
          
          echo "Prep tag: $PREP_TAG"
          echo "Version: $VERSION"
          echo "Creating release branch: $RELEASE_BRANCH"
          
          git checkout -b "$RELEASE_BRANCH"
          
          # Create temp file
          TEMP_FILE=$(mktemp)
          
          # First pass: Find if we already have this version in the changelog
          if grep -q "$VERSION" CHANGELOG.md; then
            echo "Error: Version $VERSION already exists in changelog"
            exit 1
          fi
          
          # Second pass: Process the changelog
          awk -v version="$VERSION" -v today="$TODAY" -v org="$ORG" -v proj="$PROJ" '
            BEGIN {
              print_buffer = ""
              in_unreleased = 0
            }
            
            # Match the Unreleased section start
            /^## \*\*.*Unreleased\*\*/ {
              in_unreleased = 1
              # Transform the header to release format
              print "## **[(" today ") - " version "](https://github.com/" org "/" proj "/releases/tag/" version ")**"
              next
            }
            
            # Match next section header
            /^## \*\*/ {
              in_unreleased = 0
            }
            
            # Print everything as is
            { print }
          ' CHANGELOG.md > "$TEMP_FILE"
          
          # Check if any changes were made
          if ! diff -q CHANGELOG.md "$TEMP_FILE" > /dev/null; then
            cat "$TEMP_FILE" > CHANGELOG.md
            
            # Commit changes
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            git add CHANGELOG.md
            git commit -m "chore: Prepare changelog for $VERSION release"
            
            # Push release branch
            git push origin "$RELEASE_BRANCH"
            
            # Delete the prep tag as it's no longer needed
            git push origin :refs/tags/$PREP_TAG
            
            # Create PR for release branch
            gh pr create \
              --title "Release $VERSION" \
              --body "## Release Preparation for $VERSION
              
              Release branch created from prep tag: $PREP_TAG
              
              ### Changelog Updates
              - Converted Unreleased section to version $VERSION
              - Removed Unreleased section for release
              
              ### Next Steps
              1. Review the changelog
              2. Perform any final release preparations
              3. Merge this PR to develop
              4. Create final release tag" \
              --base develop \
              --head "$RELEASE_BRANCH"
          else
            echo "No changes needed in CHANGELOG.md"
            exit 1
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}