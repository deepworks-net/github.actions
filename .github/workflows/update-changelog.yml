name: Update Changelog
on:
  pull_request:
    branches:
      - develop
    types: [closed]

jobs:
  update-changelog:
    # Only run if the PR was merged (not just closed)
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: develop
          
      - name: Update Changelog
        run: |
          echo "Processing merged pull request..."
          
          TODAY=$(date +"%m/%d/%Y")
          PR_NUM=${{ github.event.pull_request.number }}
          PR_TITLE="${{ github.event.pull_request.title }}"
          
          # Detect if this is a release branch PR
          IS_RELEASE=false
          NEW_VERSION=""
          if [[ "$PR_TITLE" =~ ^release/v([0-9]+\.[0-9]+\.[0-9]+) ]]; then
            IS_RELEASE=true
            NEW_VERSION="${BASH_REMATCH[1]}"
            echo "This is a release PR for version $NEW_VERSION"
          fi
          
          # Create temp file
          TEMP_FILE=$(mktemp)
          
          if [ "$IS_RELEASE" = true ]; then
            # For release PRs - convert Unreleased to versioned
            awk -v today="$TODAY" -v new_version="$NEW_VERSION" '
              /^## \*\*.*- Unreleased\*\*/ {
                print "## **[(" today ") - v" new_version ")](https://github.com/deepworks-net/github.actions/releases/tag/v" new_version ")**"
                next
              }
              { print }
            ' CHANGELOG.md > "$TEMP_FILE"
          else
            # For regular PRs - add to Unreleased section
            awk -v today="$TODAY" -v pr_num="$PR_NUM" -v pr_title="$PR_TITLE" '
              /^## \*\*.*- Unreleased\*\*/ {
                print
                print "- PR #" pr_num ": " pr_title
                next
              }
              { print }
            ' CHANGELOG.md > "$TEMP_FILE"
          fi
          
          cat "$TEMP_FILE" > CHANGELOG.md

      - name: Commit and Push Changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          if git status --porcelain | grep "CHANGELOG.md"; then
            git add CHANGELOG.md
            git commit -m "Update CHANGELOG.md with PR #${{ github.event.pull_request.number }} [skip ci]"
            git push origin develop
          else
            echo "No changes detected in CHANGELOG.md"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}