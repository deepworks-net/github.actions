name: Update Changelog
on:
  pull_request:
    branches:
      - staging  # Updated to new naming convention
    types: [closed]

jobs:
  update_changelog:
    # Only run if the PR was merged (not just closed)
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository }}  # Ensures the current repository
          ref: staging    # Updated to new naming convention
          fetch-depth: 0

      - name: Calculate Next Version
        uses: ./actions/version_calculation
        id: version
          
      - name: Update Changelog
        run: |
          echo "Processing merged pull request..."
          
          TODAY=$(date +"%m/%d/%Y")
          PR_NUM=${{ github.event.pull_request.number }}
          PR_TITLE="${{ github.event.pull_request.title }}"
          VERSION="${{ steps.version.outputs.next_version }}"
          
          TEMP_FILE=$(mktemp)
          
          awk -v today="$TODAY" -v pr_num="$PR_NUM" -v pr_title="$PR_TITLE" -v version="$VERSION" '
            BEGIN {
              found_unreleased = 0
              printed_new_entry = 0
            }
            
            # Keep header content
            !found_unreleased && !/^## / {
              print
              next
            }
            
            # Handle unreleased section or create new one
            /^## \*\*.*[Uu]nreleased\*\*/ {
              found_unreleased = 1
              print "## **" today " - " version " Unreleased**"
              print "- PR #" pr_num ": " pr_title
              next
            }
            
            # Collect existing unreleased entries
            found_unreleased == 1 && /^- PR #/ {
              print
              next
            }
            
            # When we hit the next section
            /^## \*\*\[/ {
              if (!found_unreleased) {
                print "## **" today " - " version " Unreleased**"
                print "- PR #" pr_num ": " pr_title
                print ""
                found_unreleased = 1
              }
              print
              next
            }
            
            # Print everything else
            { print }
            
            END {
              if (!found_unreleased) {
                if (NR > 0) print ""
                print "## **" today " - " version " Unreleased**"
                print "- PR #" pr_num ": " pr_title
              }
            }
          ' CHANGELOG.md > "$TEMP_FILE"
          
          cat "$TEMP_FILE" > CHANGELOG.md

      - name: Commit and Push Changes
        run: |
          # Commit and push changes
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add CHANGELOG.md
          git commit -m "Update CHANGELOG.md with PR #${{ github.event.pull_request.number }} [skip ci]"
          git push origin staging
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}